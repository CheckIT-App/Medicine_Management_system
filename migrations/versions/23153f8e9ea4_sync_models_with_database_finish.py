"""Sync models with database finish

Revision ID: 23153f8e9ea4
Revises: 44d90d293b26
Create Date: 2024-12-01 14:46:12.425285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23153f8e9ea4'
down_revision: Union[str, None] = '44d90d293b26'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gender_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_gender_codes_id'), 'gender_codes', ['id'], unique=False)
    op.create_table('medicine_size_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_medicine_size_codes_id'), 'medicine_size_codes', ['id'], unique=False)
    op.create_table('role_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_role_codes_id'), 'role_codes', ['id'], unique=False)
    op.create_table('medicine_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('barcode', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('size_id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['size_id'], ['medicine_size_codes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('identity_number', sa.String(length=20), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=False),
    sa.Column('contact_info', sa.String(length=150), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['gender_id'], ['gender_codes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_number')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('identity_number', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role_codes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('identity_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('actions',
    sa.Column('id', sa.Integer(), server_default=sa.text("nextval('actions_id_seq'::regclass)"), nullable=False),
    sa.Column('action_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('action_date', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('medicine_type_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('quantity_change', sa.Integer(), nullable=False),
    sa.Column('performed_by', sa.Integer(), nullable=True),
    sa.Column('action_date', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['medicine_type_id'], ['medicine_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine_instances',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('medicine_type_id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('expiration_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['medicine_type_id'], ['medicine_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), server_default=sa.text("nextval('prescriptions_id_seq'::regclass)"), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('prescribed_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prescribed_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescription_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=True),
    sa.Column('medicine_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicine_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prescription_items')
    op.drop_table('prescriptions')
    op.drop_table('medicine_instances')
    op.drop_table('inventory_logs')
    op.drop_table('actions')
    op.drop_table('users')
    op.drop_table('patients')
    op.drop_table('medicine_types')
    op.drop_index(op.f('ix_role_codes_id'), table_name='role_codes')
    op.drop_table('role_codes')
    op.drop_index(op.f('ix_medicine_size_codes_id'), table_name='medicine_size_codes')
    op.drop_table('medicine_size_codes')
    op.drop_index(op.f('ix_gender_codes_id'), table_name='gender_codes')
    op.drop_table('gender_codes')
    # ### end Alembic commands ###
